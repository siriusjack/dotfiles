# --- Settings ---
# utf-8
setw -g utf8 on
set -g status-utf8 on
# 256 Color
set -g default-terminal screen-256color
# default shell
set-option -g default-shell $SHELL
# Prefix key
unbind C-b
set -g prefix C-t
bind C-t send-prefix
# Set window base index as 1
set -g base-index 1
# Set pain base index as 1
setw -g pane-base-index 1
# Auto renumber windows
set-option -g renumber-windows on
# Aggressibe resize
set -g aggressive-resize on
# Dispay color and time
set -g status-interval 5
set -g display-time 800
# Keep current directory on split-window
if-shell "[[ `tmux -V | awk '{print $2 \" > 1.9\"}' | bc` == 1 ]]" 'display-message "tmux > 1.9"'
if-shell "[[ `tmux -V | awk '{print $2 \" > 1.9\"}' | bc` == 1 ]]" 'unbind %; bind % split-window -h -c "#{pane_current_path}"'
if-shell "[[ `tmux -V | awk '{print $2 \" > 1.9\"}' | bc` == 1 ]]" "unbind '\"'; bind '\"' split-window -v -c '#{pane_current_path}'"

# ステータスライン
# ウィンドウ名一覧の区切り文字
set-option -gw window-status-separator ") "
# 共通設定
set -g status-fg black
set -g status-bg colour50
if-shell '[[ "$HOSTNAME" == "ap-*" ]]' "set-option -g status-bg green"
if-shell '[[ "${OSTYPE:0:6}" == "darwin" ]]' "set-option -g status-bg colour44"
# ステータスラインの位置
# set -g status-position top
# set -g status-position bottom
# ステータスラインの左側
set -g status-left "#{?client_prefix,#[fg=colour254]#[bg=colour31]#[bold],#[fg=black]#[bg=colour254]#[bold]} #S #[default]"
set -g status-left-length 20
set-option -g status-left-attr none
set-option -g status-left-bg default
set-option -g status-left-fg default
# ステータスラインの右側
set-option -g status-right "#[bg=colour40] #(echo $USER)@#h | %Y-%m-%d | %H:%M:%S"
set-option -g status-right-length 64
set-option -g status-right-attr none
set-option -g status-right-bg default
set-option -g status-right-fg default
# ペイン
set -g pane-active-border-fg green
set -g pane-active-border-bg default
set -g pane-border-bg default
set -g pane-border-fg default
# ウィンドウ
setw -g window-status-fg default
setw -g window-status-bg default
set -g window-status-current-fg default
set -g window-status-current-bg default
setw -g window-status-current-attr underscore
#setw -g window-status-fg colour249
#setw -g window-status-format "#[fg=colour244,bg=colour234] #I #[default]#W "
#setw -g window-status-current-format "#[fg=colour117,bg=colour31] #I #[fg=colour231,bold]#W "
#setw -g window-status-last-fg colour31
# ウィンドウリストの位置
set-option -g status-justify left
# メッセージ
set-option -g message-attr none
set-option -g message-bg yellow
set-option -g message-fg black

# --- Key Bindings ---
# Reload config
bind r source-file ~/.tmux.conf \; display-message "Reload Config!!"
# Select pane
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-h select-pane -L
bind -n C-l select-pane -R
# Resize pane size with Vim key bindings
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
# Select window
bind -n C-p previous-window
bind -n C-n next-window

# --- Mouse Settings ---
if-shell "[[ `tmux -V | awk '{print $2 \" > 2.0\"}' | bc` == 1 ]]" "display-message 'tmux > 2.0'"
if-shell "[[ `tmux -V | awk '{print $2 \" > 2.0\"}' | bc` == 1 ]]" "set-option -g mouse on"

if-shell "[[ `tmux -V | awk '{print $2 \" < 2.0\"}' | bc` == 1 ]]" "display-message 'tmux < 2.0'"
if-shell "[[ `tmux -V | awk '{print $2 \" < 2.0\"}' | bc` == 1 ]]" "set -g mode-mouse on"
if-shell "[[ `tmux -V | awk '{print $2 \" < 2.0\"}' | bc` == 1 ]]" "set -g mouse-select-pane on"
if-shell "[[ `tmux -V | awk '{print $2 \" < 2.0\"}' | bc` == 1 ]]" "set -g mouse-select-window on"
if-shell "[[ `tmux -V | awk '{print $2 \" < 2.0\"}' | bc` == 1 ]]" "set -g mouse-resize-pane on"

# --- Utilitiy Settings
# Sync tmux buffer with OS X
# Prefix + Ctrl-c / v
if-shell '[[ $OSTYPE =~ darwin ]]' "bind C-c run 'tmux save-buffer - | reattach-to-user-namespace pbcopy'"
if-shell '[[ $OSTYPE =~ darwin ]]' "bind C-v run 'reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer'"
if-shell '[[ $OSTYPE =~ darwin ]]' "set-option -g default-command 'reattach-to-user-namespace -l zsh'"


# --- Clip board ---
# for linux
if "which xclip" "bind-key -t emacs-copy C-w copy-pipe 'xclip -i -selection clipboard'";
if "which xclip" "bind-key ] run 'tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer'";

#for mac
if "which pbcopy" "bind-key -t emacs-copy C-w copy-pipe 'pbcopy'"
if "which pbpaste" "bind-key ] run 'tmux set-buffer -- \"$(pbpaste)\"; tmux paste-buffer'"
